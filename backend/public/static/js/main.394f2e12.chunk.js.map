{"version":3,"sources":["getWeb3.js","util.js","Header.js","Campaign.js","Modal.js","TokenSelector.js","CreateCampaign.js","uniswap.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","ethDisplay","price","Header","props","className","id","onClick","this","handlePress","loginRegister","Component","Campaign","donationClick","setState","isDonationInProgress","donationFinish","state","ethAmount","donation","campaign","email","paymantInProgress","loaderText","ethAmountError","donationCancel","onInputchange","event","target","name","value","refreshPage","removingInProgress","removeCampaign","owner","accounts","indexOf","creatorAddress","progress","currentAmount","targetAmount","progressText","color","index","cover","image","reload","renderDonate","renderBody","input","size","flag","Math","round","description","length","substring","type","onChange","placeholder","active","parseInt","style","backgroundImage","backgroundColor","left","width","Modal","closeModal","TokenSelector","activToken","tokens","handleTokenClick","token","setToken","cssClass","map","i","CreateCampaign","beneficiaryAddress","errorName","errorEmail","errorTarget","errorBeneficiaryAddress","imageUrl","startDate","Date","saveCampaignHandle","error","createCampaign","setStartDate","date","selected","client","ApolloClient","link","HttpLink","uri","fetchOptions","mode","cache","InMemoryCache","DAI_QUERY","gql","ETH_PRICE_QUERY","Uniswap","useQuery","ethLoading","loading","ethPriceData","data","variables","tokenAddress","daiLoading","daiData","daiPriceInEth","derivedETH","daiTotalLiquidity","totalLiquidity","ethPriceInUSD","bundles","ethPrice","uniswapReturn","dai","eth","parseFloat","toFixed","App","storageValue","contract","list","isModal","isCreateCampaign","isLoginRegister","tokenIn","tokenOut","address","componentDidMount","_child","React","createRef","getAccounts","net","getId","networkId","deployedNetwork","SupportChildrenContract","networks","instance","Contract","abi","events","DonationMade","refreshList","CampaignFinished","CampaignCreated","pullList","alert","methods","getCampaigns","call","handleModalClick","handleCloseModal","handleCreateCampaign","utils","toWei","send","from","current","e","handleDonation","userData","donate","endCampaign","store","addNotification","title","message","insert","container","animationIn","animationOut","dismiss","duration","onScreen","modal","key","ref","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iQAEaA,EAAU,kBACrB,IAAIC,SAAQ,SAACC,EAASC,GAEpBC,OAAOC,iBAAiB,OAAxB,sBAAgC,kCAAAC,EAAA,0DAE1BF,OAAOG,SAFmB,wBAGtBC,EAAO,IAAIC,IAAKL,OAAOG,UAHD,kBAMpBH,OAAOG,SAASG,SANI,OAQ1BR,EAAQM,GARkB,gDAU1BL,EAAO,EAAD,IAVoB,gCAcrBC,OAAOI,MAERA,EAAOJ,OAAOI,KACpBG,QAAQC,IAAI,2BACZV,EAAQM,KAIFK,EAAW,IAAIJ,IAAKK,UAAUC,aAClC,yBAEIP,EAAO,IAAIC,IAAKI,GACtBF,QAAQC,IAAI,gDACZV,EAAQM,IA3BoB,8DCLvBQ,G,MAAa,SAACC,GAEvB,OADAA,GAAgB,OCuBLC,E,kDAjBb,WAAYC,GAAQ,uCACZA,G,0CAGR,WACE,OACE,gCACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,SACf,yBAAKC,GAAG,cAAcC,QAASC,KAAKJ,MAAMK,aAA1C,gBACA,yBAAKH,GAAG,gBAAgBC,QAASC,KAAKJ,MAAMM,eAA5C,0B,GAZWC,a,QCuJNC,G,wDArJb,WAAYR,GAAQ,IAAD,uBACjB,cAAMA,IAkCRS,cAAgB,WAEd,EAAKC,SAAS,CAAEC,sBAAsB,KArCrB,EAuCnBC,eAAiB,WACX,EAAKC,MAAMC,UAAY,GACzB,EAAKd,MAAMe,SAAS,EAAKf,MAAMgB,SAAU,CACvCC,MAAO,EAAKJ,MAAMI,MAClBH,UAAW,EAAKD,MAAMC,YAExB,EAAKJ,SAAS,CACZC,sBAAsB,EACtBO,mBAAmB,EACnBC,WAAY,yBAGd,EAAKT,SAAS,CACZU,gBAAgB,KApDH,EAwDnBC,eAAiB,WACf,EAAKX,SAAS,CAAEC,sBAAsB,KAzDrB,EA2DnBW,cAAgB,SAACC,GACf,EAAKb,SAAL,eACGa,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SA7DnB,EAgEnBC,YAAc,WACZ,EAAKjB,SACH,CACEQ,mBAAmB,EACnBU,oBAAoB,KApEP,EAwEnBC,eAAiB,WACf,EAAK7B,MAAM6B,eAAe,EAAK7B,MAAMgB,SAASd,IAC9C,EAAKQ,SACH,CACEkB,oBAAoB,EACpBT,WAAY,4BA1EhB,IAIIW,GAAQ,GACmD,IAA3D9B,EAAM+B,SAASC,QAAQhC,EAAMgB,SAASiB,kBAAwBH,GAAQ,GAE1E,IAAII,EAAYlC,EAAMgB,SAASmB,cAAgBnC,EAAMgB,SAASoB,aAAgB,IAC1EC,EAAeH,EACfA,EAAW,MAAKA,EAAW,KAE/B,IAAII,EAXa,CAAC,UAAW,UAAW,UAAW,WAW5BtC,EAAMuC,MAAQ,GACjCC,EAAQ,SAAW,EAAKxC,MAAMuC,MAAQ,EAAI,OAf7B,OAgBbvC,EAAMgB,SAASyB,QAAOD,EAAQxC,EAAMgB,SAASyB,OACjD,EAAK5B,MAAQ,CACX6B,QAAQ,EACR5B,UAAW,EACXM,gBAAgB,EAChBH,MAAO,GACPD,SAAU,KACVkB,SAAUA,EACVG,aAAcA,EACdC,MAAOA,EACP3B,sBAAsB,EACtB6B,MAAOA,EACPtB,mBAAmB,EACnBU,oBAAoB,EACpBE,MAAOA,EACPX,WAAY,IA/BG,E,0CAiFnB,WACE,IAIIwB,EAAcC,EFxFGC,EAAOC,EEmHtBC,EA/BFb,EAAWc,KAAKC,MAAO7C,KAAKJ,MAAMgB,SAASmB,cAAgB/B,KAAKJ,MAAMgB,SAASoB,aAAgB,KAC/FC,EAAeH,EA6BnB,OA5BIA,EAAW,MAAKA,EAAW,KAG/BU,EAAa,yBAAK3C,UAAU,wBFzFP4C,EEyFuCzC,KAAKJ,MAAMgB,SAASkC,YFzFpDJ,EEyFiE,IFxFzFD,EAAMM,OAASL,EACRD,EAAMO,UAAU,EAAGN,GAAQ,MAE9BD,IEsFJzC,KAAKS,MAAMF,sBACbiC,EAAa,6BACX,4CACA,2BAAOS,KAAK,SAASpD,UAAS,+BAA0BG,KAAKS,MAAMO,eAAiB,QAAU,IAC5FK,KAAK,YACLC,MAAOtB,KAAKS,MAAMC,UAClBwC,SAAUlD,KAAKkB,gBAEjB,yBAAKrB,UAAU,QACf,2BAAOoD,KAAK,OAAOpD,UAAU,cAC3BsD,YAAY,QACZ9B,KAAK,QACLC,MAAOtB,KAAKS,MAAMI,MAClBqC,SAAUlD,KAAKkB,iBAGnBqB,EAAe,yBAAK1C,UAAU,oBAC5B,yBAAKA,UAAU,eAAeE,QAASC,KAAKQ,gBAA5C,iBACA,yBAAKX,UAAU,eAAeE,QAASC,KAAKiB,gBAA5C,YAEOjB,KAAKJ,MAAMgB,SAASwC,SAC7Bb,EAAe,yBAAK1C,UAAU,YAAYE,QAASC,KAAKK,eAAzC,eAGbL,KAAKJ,MAAMgB,UAGX+B,EADEU,SAASrD,KAAKJ,MAAMgB,SAASmB,gBAAkBsB,SAASrD,KAAKJ,MAAMgB,SAASoB,cACvE,yBAAKnC,UAAU,YAAf,uBAEA,yBAAKA,UAAU,YAAf,qBAGP,yBAAKA,UAAU,mBACb,yBAAKA,UAAS,mBAAcG,KAAKJ,MAAMgB,SAASwC,OAAS,SAAW,WAAtD,YAAoEpD,KAAKS,MAAMe,mBAAqB,UAAY,GAAhH,YAAsHxB,KAAKS,MAAMK,kBAAoB,UAAY,GAAjK,YAAuKd,KAAKS,MAAMiB,MAAQ,QAAU,GAApM,MACZ,yBAAK7B,UAAU,iBAAiBE,QAASC,KAAKyB,iBAC7CkB,EACD,yBAAK9C,UAAU,gBAAgByD,MAAO,CACpCC,gBAAgB,QAAD,OAAUvD,KAAKS,MAAM2B,MAArB,OAEfrC,QAASC,KAAKuB,aAEd,wBAAI1B,UAAU,eAAeyD,MAAO,CAAEE,gBAAiBxD,KAAKS,MAAMyB,QAAUlC,KAAKJ,MAAMgB,SAASS,OAElG,yBAAKxB,UAAU,gBACb,yBAAKA,UAAU,UAAS,8BAAOG,KAAKS,MAAMM,aACzCyB,EACAD,EACD,yBAAK1C,UAAU,uBAAsB,yBAAKA,UAAU,wBAAuB,yBAAKA,UAAU,uBAAuByD,MAAO,CAAEG,KAAM3B,EAAW,IAAK0B,gBAAiBxD,KAAKS,MAAMyB,QAAU,gCAASD,EAAT,MAAsC,yBAAKpC,UAAU,mBAAmByD,MAAO,CAAEI,MAAO5B,EAAW,IAAK0B,gBAAiBxD,KAAKS,MAAMyB,WAC1T,yBAAKrC,UAAU,kBAAiB,2CAAhC,IAA0DJ,EAAWO,KAAKJ,MAAMgB,SAASmB,eAAe,yBAAKlC,UAAU,SACvH,yBAAKA,UAAU,gBAAe,yCAA9B,IAAsDJ,EAAWO,KAAKJ,MAAMgB,SAASoB,cAAc,yBAAKnC,UAAU,aAOlH,kC,GAlJSM,cCaRwD,E,kDAfb,WAAY/D,GAAQ,IAAD,8BACjB,cAAMA,IAGRgE,WAAa,WACX,EAAKhE,MAAMgE,cALM,E,0CAQnB,WACE,OACE,yBAAK9D,GAAG,WAAWC,QAASC,KAAK4D,iB,GAXnBzD,aCgCL0D,G,8DA1BX,WAAYjE,GAAQ,IAAD,8BACf,cAAMA,IAJVa,MAAQ,CACJqD,WAAY,EAAKlE,MAAMmE,OAAO,IAEf,EAGnBC,iBAAmB,SAACC,GAEhB,EAAKrE,MAAMsE,SAASD,GACpB,EAAK3D,SAAS,CACVwD,WAAYG,KAPD,E,0CAUnB,WAAU,IAAD,OACL,OACI,6BACI,yBAAKpE,UAAU,eACX,6BAAMG,KAAKS,MAAMqD,WAAWzC,KAAK,yBAAKxB,UAAS,mBAAcG,KAAKS,MAAMqD,WAAWK,aACnF,4BACKnE,KAAKJ,MAAMmE,OAAOK,KAAI,SAACH,EAAOI,GAC3B,OAAO,wBAAItE,QAAS,WAAQ,EAAKiE,iBAAiBC,KAAWA,EAAM5C,KAAK,yBAAKxB,UAAS,mBAAcoE,EAAME,uB,GArB1GhE,c,iBCoIbmE,G,wDAlHX,WAAY1E,GAAQ,IAAD,8BACf,cAAMA,IAfVa,MAAQ,CACJY,KAAM,GACNyB,YAAa,GACbjC,MAAO,GACP0D,mBAAoB,GACpBvC,aAAc,EACdwC,WAAW,EACXC,YAAY,EACZC,aAAa,EACbC,yBAAyB,EACzBC,SAAU,GACVX,MAAO,EAAKrE,MAAMmE,OAAO,GACzBc,UAAW,IAAIC,MAEA,EAGnB5D,cAAgB,SAACC,GACb,EAAKb,SAAL,eACKa,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SALvB,EAQnByD,mBAAqB,WACjB,IAAIC,GAAQ,EACW,IAAnB,EAAKvE,MAAMY,OACX,EAAKf,SAAS,CAAEkE,WAAW,IAC3BQ,GAAQ,GAEY,IAApB,EAAKvE,MAAMI,QACX,EAAKP,SAAS,CAAEmE,YAAY,IAC5BO,GAAQ,GAER,EAAKvE,MAAMuB,cAAgB,IAC3B,EAAK1B,SAAS,CAAEoE,aAAa,IAC7BM,GAAQ,GAEyB,IAAjC,EAAKvE,MAAM8D,qBACX,EAAKjE,SAAS,CAAEqE,yBAAyB,IACzCK,GAAQ,GAEPA,GACD,EAAKpF,MAAMqF,eAAe,CACtB5D,KAAM,EAAKZ,MAAMY,KACjBR,MAAO,EAAKJ,MAAMI,MAClBiC,YAAa,EAAKrC,MAAMqC,YACxBd,aAAc,EAAKvB,MAAMuB,aACzB4C,SAAU,EAAKnE,MAAMmE,SACrBL,mBAAoB,EAAK9D,MAAM8D,sBAjCxB,EAqCnBX,WAAa,WACT,EAAKhE,MAAMgE,cAtCI,EAwCnBM,SAAW,SAACD,GACR7E,QAAQC,IAAI,YAAa4E,GACzB,EAAK3D,SAAS,CACV2D,MAAOA,KA3CI,EA8CnBiB,aAAe,SAACC,GACZ,EAAK7E,SAAS,CACVuE,UAAWM,KAhDA,E,0CAmDnB,WAAU,IAAD,OACL,OACI,yBAAKrF,GAAG,yBACJ,yBAAKD,UAAU,qBACf,yBAAKA,UAAU,sBACX,+CACA,yBAAKA,UAAU,WACX,yBAAKA,UAAU,QACX,2BAAOoD,KAAK,OAAOE,YAAY,gBAAgBtD,UAAS,UAAKG,KAAKS,MAAM+D,UAAY,QAAU,IAC1FnD,KAAK,OACLC,MAAOtB,KAAKS,MAAMY,KAClB6B,SAAUlD,KAAKkB,iBAGvB,yBAAKrB,UAAU,gBACX,2BAAOoD,KAAK,SAASE,YAAY,gBAAgBtD,UAAS,UAAKG,KAAKS,MAAMiE,YAAc,QAAU,IAC9FrD,KAAK,eACLC,MAAOtB,KAAKS,MAAMuB,aAClBkB,SAAUlD,KAAKkB,iBAGvB,yBAAKrB,UAAU,gBACX,kBAAC,EAAD,CAAekE,OAAQ/D,KAAKJ,MAAMmE,OAAQG,SAAUlE,KAAKkE,aAGjE,2BAAOjB,KAAK,OAAOE,YAAY,sBAAsBtD,UAAS,UAAKG,KAAKS,MAAMkE,wBAA0B,QAAU,IAC9GtD,KAAK,qBACLC,MAAOtB,KAAKS,MAAM8D,mBAClBrB,SAAUlD,KAAKkB,gBAEnB,8BAAUiC,YAAY,cAClB9B,KAAK,cACLC,MAAOtB,KAAKS,MAAMqC,YAClBI,SAAUlD,KAAKkB,gBAEnB,2BAAO+B,KAAK,OAAOE,YAAY,QAAQtD,UAAS,UAAKG,KAAKS,MAAMgE,WAAa,QAAU,IACnFpD,KAAK,QACLC,MAAOtB,KAAKS,MAAMI,MAClBqC,SAAUlD,KAAKkB,gBAEnB,yBAAKrB,UAAU,WACX,yBAAKA,UAAU,QACX,2BAAOoD,KAAK,OAAOE,YAAY,YAC3B9B,KAAK,WACLC,MAAOtB,KAAKS,MAAMmE,SAClB1B,SAAUlD,KAAKkB,iBAGvB,yBAAKrB,UAAU,QACX,8CACA,kBAAC,IAAD,CAAYuF,SAAUpF,KAAKS,MAAMoE,UAC7B3B,SAAU,SAACiC,GAAD,OAAU,EAAKD,aAAaC,QAIlD,yBAAKrF,GAAG,qBAAqBC,QAASC,KAAK+E,oBAA3C,mBACA,yBAAKjF,GAAG,uBAAuBC,QAASC,KAAK4D,YAA7C,gB,GA1HSzD,c,uGCEhBkF,EAAS,IAAIC,IAAa,CACnCC,KAAM,IAAIC,IAAS,CACfC,IAAK,+DAETC,aAAc,CACVC,KAAM,WAEVC,MAAO,IAAIC,MAGTC,EAAYC,YAAH,qKASTC,EAAkBD,YAAH,8GA+CNE,MAvCf,SAAiBrG,GACb,MAAoDsG,YAASF,GAA5CG,EAAjB,EAAQC,QAA2BC,EAAnC,EAA6BC,KAC7B,EAA+CJ,YAASJ,EAAW,CAC/DS,UAAW,CACPC,aAAc,gDAFLC,EAAjB,EAAQL,QAA2BM,EAAnC,EAA6BJ,KAMvBK,EAAgBD,GAAWA,EAAQ3C,OAAO,GAAG6C,WAC7CC,EAAoBH,GAAWA,EAAQ3C,OAAO,GAAG+C,eACjDC,EAAgBV,GAAgBA,EAAaW,QAAQ,GAAGC,SAO9D,OALIN,GAAiBI,GAAenH,EAAMsH,cAAc,CACpDC,IAAKR,EACLS,IAAKL,IAIL,oCACI,yCACe,IACVZ,GAAcM,EACT,wBACA,KAEDY,WAAWV,GAAiBU,WAAWN,IAAgBO,QAAQ,IAExE,mDACyB,IACpBb,EACK,wBAEFY,WAAWR,GAAmBS,QAAQ,MC4K3CC,E,4MAzNb9G,MAAQ,CACN+G,aAAc,EACdvI,KAAM,KACN0C,SAAU,KACV8F,SAAU,KACVC,KAAM,GACNC,SAAS,EACTC,kBAAkB,EAClBC,iBAAiB,EACjBC,QAAS,KACTC,SAAU,KACVhE,OAAQ,CACN,CACE1C,KAAM,MACN2G,QAAS,GACT7D,SAAU,YAEZ,CACE9C,KAAM,MACN2G,QAAS,GACT7D,SAAU,YAEZ,CACE9C,KAAM,MACN2G,QAAS,GACT7D,SAAU,YAEZ,CACE9C,KAAM,MACN2G,QAAS,GACT7D,SAAU,c,EAKhB8D,kB,sBAAoB,oCAAAlJ,EAAA,6DAClB,EAAKmJ,OAASC,IAAMC,YADF,kBAIG3J,IAJH,cAIVQ,EAJU,gBAMOA,EAAKmI,IAAIiB,cANhB,cAMV1G,EANU,iBASQ1C,EAAKmI,IAAIkB,IAAIC,QATrB,QASVC,EATU,OAUVC,EAAkBC,EAAwBC,SAASH,IACnDI,EAAW,IAAI3J,EAAKmI,IAAIyB,SAC5BH,EAAwBI,IACxBL,GAAmBA,EAAgBT,UAG5Be,OAAOC,aAAa,GAA7B,uCAAiC,WAAOhE,EAAOsB,GAAd,SAAAvH,EAAA,0DAE3BiG,EAF2B,yCAGtB5F,QAAQC,IAAI,UAAY2F,IAHF,OAK/B,EAAKiE,cAL0B,2CAAjC,yDAQAL,EAASG,OAAOG,iBAAiB,GAAjC,uCAAqC,WAAOlE,EAAOsB,GAAd,SAAAvH,EAAA,0DAE/BiG,EAF+B,yCAG1B5F,QAAQC,IAAI,UAAY2F,IAHE,OAKnC,EAAKiE,cAL8B,2CAArC,yDAQAL,EAASG,OAAOI,gBAAgB,GAAhC,uCAAoC,WAAOnE,EAAOsB,GAAd,SAAAvH,EAAA,sDAElC,EAAKkK,cAF6B,2CAApC,yDAMA,EAAK3I,SAAS,CAAErB,OAAM0C,WAAU8F,SAAUmB,GAAY,EAAKQ,UAtC3C,kDA4ChBC,MAAM,0EAGNjK,QAAQ4F,MAAR,MA/CgB,0D,EAmDpBoE,S,sBAAW,gCAAArK,EAAA,+DACsB,EAAK0B,MAD3B,EACDkB,SAAU8F,EADT,EACSA,SADT,SAEQA,EAAS6B,QAAQC,eAAeC,OAFxC,OAEL9B,EAFK,OAKT,EAAKpH,SAAS,CACZoH,KAAMA,IANC,2C,EAUXzH,Y,sBAAc,sBAAAlB,EAAA,sDACZ,EAAKuB,SAAS,CACZqH,SAAS,EACTC,kBAAkB,IAHR,2C,EAMd6B,iBAAmB,WACjB,EAAKC,oB,EAEPC,qB,uCAAuB,WAAOrD,GAAP,mBAAAvH,EAAA,+DACU,EAAK0B,MAA5BkB,EADa,EACbA,SAAU8F,EADG,EACHA,SAElB,EAAKiC,mBAHgB,kBAKbjC,EAAS6B,QAAQrE,eAAeqB,EAAKjF,KAAMiF,EAAKxD,YAAawD,EAAKzF,MAAOyF,EAAK1B,SAAU,EAAKnE,MAAMxB,KAAK2K,MAAMC,MAAMvD,EAAKtE,aAAc,SAAUsE,EAAK/B,oBAAoBuF,KAAK,CAAEC,KAAMpI,EAAS,KALnL,uDAOnB,EAAKsH,cAPc,yD,wDAUvBS,iBAAmB,WACjB,EAAKpJ,SAAS,CACZqH,SAAS,EACTC,kBAAkB,K,EAGtBqB,YAAc,WACZ,IACE,EAAKf,OAAO8B,QAAQzI,cACpB,EAAK6H,WACL,MAAOa,GACP7K,QAAQC,IAAI4K,K,EAGhBC,e,uCAAiB,WAAO5D,EAAM6D,GAAb,mBAAApL,EAAA,+DACgB,EAAK0B,MAA5BkB,EADO,EACPA,SAAU8F,EADH,EACGA,SADH,kBAKPA,EAAS6B,QAAQc,OAAO9D,EAAKxG,GAAIqK,EAAStJ,OAAOiJ,KAAK,CAAEC,KAAMpI,EAAS,GAAIL,MAAO,EAAKb,MAAMxB,KAAK2K,MAAMC,MAAMM,EAASzJ,UAAW,WAL3H,uDAOb,EAAKwH,OAAO8B,QAAQzI,cACpB,EAAK6H,WARQ,yD,0DAWjB3H,e,uCAAiB,WAAO3B,GAAP,mBAAAf,EAAA,+DAEgB,EAAK0B,MAA5BkB,EAFO,EAEPA,SAAU8F,EAFH,EAEGA,SAFH,kBAIPA,EAAS6B,QAAQe,YAAYvK,GAAIgK,KAAK,CAAEC,KAAMpI,EAAS,KAJhD,uDAMb,EAAKuG,OAAO8B,QAAQzI,cACpB,EAAK6H,WAPQ,yD,wDAWjBlJ,cAAgB,WACd,EAAKI,SAAS,CACZwH,QAAS,MACTC,SAAU,MACVJ,SAAS,EACTE,iBAAiB,IAGnByC,QAAMC,gBAAgB,CACpBC,MAAO,aACPC,QAAS,yCACTxH,KAAM,UACNyH,OAAQ,MACRC,UAAW,eACXC,YAAa,CAAC,qCACdC,aAAc,CAAC,sCACfC,QAAS,CACPC,SAAU,IACVC,UAAU,M,EAWhB9D,cAAgB,SAACZ,GACflH,QAAQC,IAAIiH,I,4CAGd,WAAU,IAIJ2E,EAAOhG,EAJJ,OACP,OAAKjF,KAAKS,MAAMxB,MAIZe,KAAKS,MAAMkH,UACbsD,EAAQ,kBAAC,EAAD,CAAOrH,WAAY5D,KAAK0J,oBAE9B1J,KAAKS,MAAMmH,mBACb3C,EAAiB,kBAAC,EAAD,CAAgBA,eAAgBjF,KAAK2J,qBAAsB/F,WAAY5D,KAAK0J,iBAAkB3F,OAAQ/D,KAAKS,MAAMsD,UAGlI,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAgBsB,OAAQA,GAAQ,kBAAC,EAAD,CAASyC,QAAS9H,KAAKS,MAAMqH,QAASC,SAAU/H,KAAKS,MAAMsH,SAAUb,cAAelH,KAAKkH,iBACzH,yBAAKrH,UAAU,OACZoL,EACAhG,EACD,kBAAC,EAAD,CAAQhF,YAAaD,KAAKC,YAAaC,cAAeF,KAAKE,gBAC3D,yBAAKL,UAAU,WACb,yBAAKA,UAAU,QACZG,KAAKS,MAAMiH,KAAKtD,KAAI,SAACxD,EAAUyD,GAC9B,OAAO,kBAAC,EAAD,CAAUzD,SAAUA,EAAUuB,MAAOkC,EAAG6G,IAAK7G,EAAG1D,SAAU,EAAKuJ,eAAgBvI,SAAU,EAAKlB,MAAMkB,SAAUwJ,IAAK,EAAKjD,OAAQzG,eAAgB,EAAKA,sBAIlK,oCAxBG,4E,GA3LKtB,aCVEiL,QACW,cAA7BvM,OAAOwM,SAASC,UAEe,UAA7BzM,OAAOwM,SAASC,UAEhBzM,OAAOwM,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.394f2e12.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nexport const getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable()\n          // Accounts now exposed\n          resolve(web3)\n        } catch (error) {\n          reject(error)\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\")\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\")\n        resolve(web3)\n      }\n    })\n  })","export const ethDisplay = (price) => {\n    price = price / 1000000000000000000\n    return price\n}\n\nexport const trimText = (input, size) => {\n    if (input.length > size) {\n        return input.substring(0, size) + '...';\n     }\n     return input;\n}","import React, { Component } from \"react\";\n\nimport \"./Header.css\";\nimport { ethDisplay, trimText } from './util'\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <header>\n        <div className=\"wrapper\">\n          <div className=\"logo\"></div>\n          <div id=\"addCampaign\" onClick={this.props.handlePress}>Add Campaign</div>\n          <div id=\"loginRegister\" onClick={this.props.loginRegister}>Login / Register</div>\n        </div>\n      </header>\n    )\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nimport \"./Campaign.css\";\nimport { ethDisplay, trimText } from './util'\n\nclass Campaign extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let colorArray = ['#00baa3', '#efc94c', '#d55342', '#2780ba']\n\n    // console.log(\"Campaign\", props.campaign)\n    // console.log(\"Accounts\", props.accounts)\n    let owner = false\n    if (props.accounts.indexOf(props.campaign.creatorAddress) !== -1) owner = true\n    // console.log(\"Index\", props.index)\n    let progress = (props.campaign.currentAmount / props.campaign.targetAmount) * 100\n    let progressText = progress\n    if (progress > 100) progress = 100\n    // console.log('progress', progress)\n    let color = colorArray[props.index % 4]\n    let cover = 'cause-' + this.props.index % 7 + '.jpg'\n    if (props.campaign.image) cover = props.campaign.image\n    this.state = {\n      reload: false,\n      ethAmount: 0,\n      ethAmountError: false,\n      email: '',\n      campaign: null,\n      progress: progress,\n      progressText: progressText,\n      color: color,\n      isDonationInProgress: false,\n      cover: cover,\n      paymantInProgress: false,\n      removingInProgress: false,\n      owner: owner,\n      loaderText: ''\n    }\n  }\n\n  donationClick = () => {\n    // this.props.donation(this.props.campaign)\n    this.setState({ isDonationInProgress: true })\n  }\n  donationFinish = () => {\n    if (this.state.ethAmount > 0) {\n      this.props.donation(this.props.campaign, {\n        email: this.state.email,\n        ethAmount: this.state.ethAmount\n      })\n      this.setState({\n        isDonationInProgress: false,\n        paymantInProgress: true,\n        loaderText: 'Paymant In Progress'\n      })\n    } else {\n      this.setState({\n        ethAmountError: true\n      })\n    }\n  }\n  donationCancel = () => {\n    this.setState({ isDonationInProgress: false })\n  }\n  onInputchange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n  refreshPage = () => {\n    this.setState(\n      {\n        paymantInProgress: false,\n        removingInProgress: false\n      }\n    )\n  }\n  removeCampaign = () => {\n    this.props.removeCampaign(this.props.campaign.id)\n    this.setState(\n      {\n        removingInProgress: true,\n        loaderText: 'Deactivate In Progress'\n      }\n    )\n  }\n  render() {\n    let progress = Math.round((this.props.campaign.currentAmount / this.props.campaign.targetAmount) * 100)\n    let progressText = progress\n    if (progress > 100) progress = 100\n\n    let renderDonate, renderBody\n    renderBody = <div className=\"campaignDescription\">{trimText(this.props.campaign.description, 100)}</div>\n    if (this.state.isDonationInProgress) {\n      renderBody = <div>\n        <strong>Donate: </strong>\n        <input type=\"number\" className={`donateInput ethValue ${this.state.ethAmountError ? \"error\" : \"\"}`}\n          name=\"ethAmount\"\n          value={this.state.ethAmount}\n          onChange={this.onInputchange}\n        />\n        <div className=\"eth\"></div>\n        <input type=\"text\" className=\"donateInput\"\n          placeholder=\"email\"\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onInputchange}\n        />\n      </div>\n      renderDonate = <div className=\"donateBtnWrapper\">\n        <div className=\"donateFinish\" onClick={this.donationFinish}>Send Donation</div>\n        <div className=\"donateCancel\" onClick={this.donationCancel}>Cancel</div>\n      </div>\n    } else if (this.props.campaign.active) {\n      renderDonate = <div className=\"donateBtn\" onClick={this.donationClick}>Donate Now</div>\n    }\n\n    if (this.props.campaign) {\n      let flag\n      if (parseInt(this.props.campaign.currentAmount) >= parseInt(this.props.campaign.targetAmount)) {\n        flag = <div className=\"finished\">Campaign Successful</div>\n      } else {\n        flag = <div className=\"finished\">Campaign Inactive</div>\n      }\n      return (\n        <div className=\"campaignWrapper\">\n          <div className={`campaign ${this.props.campaign.active ? \"active\" : \"inactive\"} ${this.state.removingInProgress ? \"loading\" : \"\"} ${this.state.paymantInProgress ? \"loading\" : \"\"} ${this.state.owner ? \"owner\" : \"\"} `}>\n            <div className=\"removeCampaing\" onClick={this.removeCampaign}></div>\n            {flag}\n            <div className=\"campaignPhoto\" style={{\n              backgroundImage: `url(\"${this.state.cover}\")`\n            }}\n              onClick={this.refreshPage}\n            >\n              <h2 className=\"campaignName\" style={{ backgroundColor: this.state.color }}>{this.props.campaign.name}</h2>\n            </div>\n            <div className=\"campaignBody\">\n              <div className=\"loader\"><span>{this.state.loaderText}</span></div>\n              {renderBody}\n              {renderDonate}\n              <div className=\"campaignGoalWrapper\"><div className=\"campaignGoalProgress\"><div className=\"campaignProgressText\" style={{ left: progress + \"%\", backgroundColor: this.state.color }} ><strong>{progressText}%</strong></div><div className=\"campaignProgress\" style={{ width: progress + '%', backgroundColor: this.state.color }}></div></div></div>\n              <div className=\"campaignRaised\"><strong>Raised:</strong> {ethDisplay(this.props.campaign.currentAmount)}<div className=\"eth\"></div></div>\n              <div className=\"campaignGoal\"><strong>Goal:</strong> {ethDisplay(this.props.campaign.targetAmount)}<div className=\"eth\"></div></div>\n            </div>\n\n          </div>\n        </div>\n      )\n    } else {\n      return (<div></div>)\n    }\n  }\n}\n\nexport default Campaign;\n","import React, { Component } from \"react\";\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  closeModal = () => {\n    this.props.closeModal()\n  }\n\n  render() {\n    return (\n      <div id=\"modalDim\" onClick={this.closeModal}></div>\n    )\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\n\nimport \"./TokenSelector.css\";\n\nclass TokenSelector extends Component {\n    state = {\n        activToken: this.props.tokens[0],\n    }\n    constructor(props) {\n        super(props)\n    }\n    handleTokenClick = (token) => {\n        // console.log('tokens:', data.name)\n        this.props.setToken(token)\n        this.setState({\n            activToken: token\n        })\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"selectField\">\n                    <div>{this.state.activToken.name}<div className={`tokenImg ${this.state.activToken.cssClass}`}></div></div>\n                    <ul>\n                        {this.props.tokens.map((token, i) => {\n                            return <li onClick={() => { this.handleTokenClick(token) }}>{token.name}<div className={`tokenImg ${token.cssClass}`}></div></li>\n                        })}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TokenSelector;\n","import React, { Component } from \"react\"\n\nimport \"./CreateCamapign.css\";\nimport TokenSelector from \"./TokenSelector\"\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nclass CreateCampaign extends Component {\n    state = {\n        name: '',\n        description: '',\n        email: '',\n        beneficiaryAddress: '',\n        targetAmount: 0,\n        errorName: false,\n        errorEmail: false,\n        errorTarget: false,\n        errorBeneficiaryAddress: false,\n        imageUrl: '',\n        token: this.props.tokens[0],\n        startDate: new Date(),\n    }\n    constructor(props) {\n        super(props)\n    }\n    onInputchange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    saveCampaignHandle = () => {\n        let error = false\n        if (this.state.name == '') {\n            this.setState({ errorName: true })\n            error = true\n        }\n        if (this.state.email == '') {\n            this.setState({ errorEmail: true })\n            error = true\n        }\n        if (this.state.targetAmount <= 0) {\n            this.setState({ errorTarget: true })\n            error = true\n        }\n        if (this.state.beneficiaryAddress == '') {\n            this.setState({ errorBeneficiaryAddress: true })\n            error = true\n        }\n        if (!error) {\n            this.props.createCampaign({\n                name: this.state.name,\n                email: this.state.email,\n                description: this.state.description,\n                targetAmount: this.state.targetAmount,\n                imageUrl: this.state.imageUrl,\n                beneficiaryAddress: this.state.beneficiaryAddress,\n            })\n        }\n    }\n    closeModal = () => {\n        this.props.closeModal()\n    }\n    setToken = (token) => {\n        console.log('Set Token', token)\n        this.setState({\n            token: token\n        })\n    }\n    setStartDate = (date) => {\n        this.setState({\n            startDate: date\n        })\n    }\n    render() {\n        return (\n            <div id=\"createCamapignWrapper\">\n                <div className=\"createCamapignBg\"></div>\n                <div className=\"createCamapignBody\">\n                    <h3>Create Campaign</h3>\n                    <div className=\"flexRow\">\n                        <div className=\"col6\">\n                            <input type=\"text\" placeholder=\"Campaign Name\" className={`${this.state.errorName ? \"error\" : \"\"}`}\n                                name=\"name\"\n                                value={this.state.name}\n                                onChange={this.onInputchange}\n                            />\n                        </div>\n                        <div className=\"col3 ethCell\">\n                            <input type=\"number\" placeholder=\"Target Amount\" className={`${this.state.errorTarget ? \"error\" : \"\"}`}\n                                name=\"targetAmount\"\n                                value={this.state.targetAmount}\n                                onChange={this.onInputchange}\n                            />\n                        </div>\n                        <div className=\"col3 ethCell\">\n                            <TokenSelector tokens={this.props.tokens} setToken={this.setToken} />\n                        </div>\n                    </div>\n                    <input type=\"text\" placeholder=\"Beneficiary Address\" className={`${this.state.errorBeneficiaryAddress ? \"error\" : \"\"}`}\n                        name=\"beneficiaryAddress\"\n                        value={this.state.beneficiaryAddress}\n                        onChange={this.onInputchange}\n                    />\n                    <textarea placeholder=\"Description\"\n                        name=\"description\"\n                        value={this.state.description}\n                        onChange={this.onInputchange}\n                    ></textarea>\n                    <input type=\"text\" placeholder=\"Email\" className={`${this.state.errorEmail ? \"error\" : \"\"}`}\n                        name=\"email\"\n                        value={this.state.email}\n                        onChange={this.onInputchange}\n                    />\n                    <div className=\"flexRow\">\n                        <div className=\"col6\">\n                            <input type=\"text\" placeholder=\"Image URL\"\n                                name=\"imageUrl\"\n                                value={this.state.imageUrl}\n                                onChange={this.onInputchange}\n                            />\n                        </div>\n                        <div className=\"col6\">\n                            <span>Valid till: </span>\n                            <DatePicker selected={this.state.startDate}\n                                onChange={(date) => this.setStartDate(date)}\n                            />\n                        </div>\n                    </div>\n                    <div id=\"createCampaignSave\" onClick={this.saveCampaignHandle}>Create Campaign</div>\n                    <div id=\"createCampaignCancel\" onClick={this.closeModal}>Cancel</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateCampaign;\n","import React, { useEffect } from 'react'\nimport { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\n// import uniswapLogo from '../uniswap-logo.png'\n// import daiLogo from '../dai-logo.png'\n\nexport const client = new ApolloClient({\n    link: new HttpLink({\n        uri: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2'\n    }),\n    fetchOptions: {\n        mode: 'no-cors'\n    },\n    cache: new InMemoryCache()\n})\n\nconst DAI_QUERY = gql`\n  query tokens($tokenAddress: Bytes!) {\n    tokens(where: { id: $tokenAddress }) {\n      derivedETH\n      totalLiquidity\n    }\n  }\n`\n\nconst ETH_PRICE_QUERY = gql`\n  query bundles {\n    bundles(where: { id: \"1\" }) {\n      ethPrice\n    }\n  }\n`\n\nfunction Uniswap(props) {\n    const { loading: ethLoading, data: ethPriceData } = useQuery(ETH_PRICE_QUERY)\n    const { loading: daiLoading, data: daiData } = useQuery(DAI_QUERY, {\n        variables: {\n            tokenAddress: '0x6b175474e89094c44da98b954eedeac495271d0f'\n        }\n    })\n\n    const daiPriceInEth = daiData && daiData.tokens[0].derivedETH\n    const daiTotalLiquidity = daiData && daiData.tokens[0].totalLiquidity\n    const ethPriceInUSD = ethPriceData && ethPriceData.bundles[0].ethPrice\n\n    if (daiPriceInEth && ethPriceInUSD) props.uniswapReturn({\n        dai: daiPriceInEth ,\n        eth: ethPriceInUSD\n    })\n\n    return (\n        <>\n            <h2>\n                Dai price:{' '}\n                {ethLoading || daiLoading\n                    ? 'Loading token data...'\n                    : '$' +\n                    // parse responses as floats and fix to 2 decimals\n                    (parseFloat(daiPriceInEth) * parseFloat(ethPriceInUSD)).toFixed(2)}\n            </h2>\n            <h2>\n                Dai total liquidity:{' '}\n                {daiLoading\n                    ? 'Loading token data...'\n                    : // display the total amount of DAI spread across all pools\n                    parseFloat(daiTotalLiquidity).toFixed(0)}\n            </h2>\n\n        </>\n    );\n}\n\nexport default Uniswap","import React, { Component } from \"react\";\nimport SupportChildrenContract from \"./contracts/SupportChildren.json\";\nimport { getWeb3 } from \"./getWeb3\";\n\nimport Header from \"./Header\";\nimport Campaign from \"./Campaign\";\nimport Modal from \"./Modal\";\nimport CreateCampaign from \"./CreateCampaign\";\n\nimport { ApolloProvider } from 'react-apollo'\n\nimport ReactNotification from 'react-notifications-component'\nimport { store } from 'react-notifications-component';\n\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'animate.css/animate.min.css'\nimport 'react-notifications-component/dist/theme.css'\n\nimport Uniswap from './uniswap';\nimport { client } from './uniswap'\n\nclass App extends Component {\n  state = {\n    storageValue: 0,\n    web3: null,\n    accounts: null,\n    contract: null,\n    list: [],\n    isModal: false,\n    isCreateCampaign: false,\n    isLoginRegister: false,\n    tokenIn: null,\n    tokenOut: null,\n    tokens: [\n      {\n        name: 'ETH',\n        address: '',\n        cssClass: 'tokenEth'\n      },\n      {\n        name: 'DAI',\n        address: '',\n        cssClass: 'tokenDai'\n      },\n      {\n        name: 'CEL',\n        address: '',\n        cssClass: 'tokenCel'\n      },\n      {\n        name: 'OMG',\n        address: '',\n        cssClass: 'tokenOmg'\n      },\n    ]\n\n  };\n  componentDidMount = async () => {\n    this._child = React.createRef();\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SupportChildrenContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        SupportChildrenContract.abi,\n        deployedNetwork && deployedNetwork.address\n      )\n\n      instance.events.DonationMade({}, async (error, data) => {\n        // console.log('DonationMade')\n        if (error) {\n          return console.log('Error: ' + error)\n        }\n        this.refreshList()\n      })\n\n      instance.events.CampaignFinished({}, async (error, data) => {\n        // console.log('CampaignFinished')\n        if (error) {\n          return console.log('Error: ' + error)\n        }\n        this.refreshList()\n      })\n\n      instance.events.CampaignCreated({}, async (error, data) => {\n        // console.log('CampaignCreated')\n        this.refreshList()\n      })\n\n\n      this.setState({ web3, accounts, contract: instance }, this.pullList);\n\n\n      // console.log(instance);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  pullList = async () => {\n    const { accounts, contract } = this.state;\n    let list = await contract.methods.getCampaigns().call()\n    // console.log(list)\n\n    this.setState({\n      list: list\n    })\n  }\n\n  handlePress = async () => {\n    this.setState({\n      isModal: true,\n      isCreateCampaign: true\n    })\n  }\n  handleModalClick = () => {\n    this.handleCloseModal()\n  }\n  handleCreateCampaign = async (data) => {\n    const { accounts, contract } = this.state;\n    // console.log('Create campaign', data)\n    this.handleCloseModal()\n    try {\n      await contract.methods.createCampaign(data.name, data.description, data.email, data.imageUrl, this.state.web3.utils.toWei(data.targetAmount, 'ether'), data.beneficiaryAddress).send({ from: accounts[0] })\n    } catch (e) {\n      this.refreshList()\n    }\n  }\n  handleCloseModal = () => {\n    this.setState({\n      isModal: false,\n      isCreateCampaign: false\n    })\n  }\n  refreshList = () => {\n    try {\n      this._child.current.refreshPage()\n      this.pullList()\n    } catch (e) {\n      console.log(e)\n    }\n  }\n  handleDonation = async (data, userData) => {\n    const { accounts, contract } = this.state;\n    // console.log('Donation', data, userData)\n    // data.beneficiaryAddress\n    try {\n      await contract.methods.donate(data.id, userData.email).send({ from: accounts[0], value: this.state.web3.utils.toWei(userData.ethAmount, 'ether') })\n    } catch (e) {\n      this._child.current.refreshPage()\n      this.pullList()\n    }\n  }\n  removeCampaign = async (id) => {\n    // console.log('removeCampaign', id)\n    const { accounts, contract } = this.state;\n    try {\n      await contract.methods.endCampaign(id).send({ from: accounts[0] })\n    } catch (e) {\n      this._child.current.refreshPage()\n      this.pullList()\n    }\n  }\n\n  loginRegister = () => {\n    this.setState({\n      tokenIn: 'DAI',\n      tokenOut: 'ETH',\n      isModal: true,\n      isLoginRegister: true\n    })\n\n    store.addNotification({\n      title: \"Wonderful!\",\n      message: \"teodosii@react-notifications-component\",\n      type: \"success\",\n      insert: \"top\",\n      container: \"bottom-right\",\n      animationIn: [\"animate__animated animate__fadeIn\"],\n      animationOut: [\"animate__animated animate__fadeOut\"],\n      dismiss: {\n        duration: 5000,\n        onScreen: true\n      }\n    })\n\n    try {\n      // this.state.web3.eth.personal.sign('{\"timestamp\":  1627753792758}', this.state.accounts[0]).then(console.log)\n    } catch (e) {\n      console.log({ error: e })\n    }\n  }\n\n  uniswapReturn = (data) => {\n    console.log(data)\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    let modal, createCampaign\n    if (this.state.isModal) {\n      modal = <Modal closeModal={this.handleCloseModal} />;\n    }\n    if (this.state.isCreateCampaign) {\n      createCampaign = <CreateCampaign createCampaign={this.handleCreateCampaign} closeModal={this.handleCloseModal} tokens={this.state.tokens} />;\n    }\n    return (\n      <>\n        <ReactNotification />\n        <ApolloProvider client={client}><Uniswap tokenIn={this.state.tokenIn} tokenOut={this.state.tokenOut} uniswapReturn={this.uniswapReturn} /></ApolloProvider>\n        <div className=\"App\">\n          {modal}\n          {createCampaign}\n          <Header handlePress={this.handlePress} loginRegister={this.loginRegister} />\n          <div className=\"content\">\n            <div className=\"list\">\n              {this.state.list.map((campaign, i) => {\n                return <Campaign campaign={campaign} index={i} key={i} donation={this.handleDonation} accounts={this.state.accounts} ref={this._child} removeCampaign={this.removeCampaign} />;\n              })}\n            </div>\n          </div>\n          <footer></footer>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}